package com.jymj.zhglxt.xm.activity

import android.annotation.SuppressLint
import android.content.Context
import android.content.Intent
import android.graphics.Color
import android.net.Uri
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Button
import android.widget.ImageView
import android.widget.LinearLayout
import android.widget.TextView
import androidx.recyclerview.widget.LinearLayoutManager
import com.bumptech.glide.Glide
import com.github.mikephil.charting.charts.PieChart
import com.jymj.zhglxt.R
import com.jymj.zhglxt.util.AppInstalledUtils
import com.jymj.zhglxt.util.DensityUtil
import com.jymj.zhglxt.util.PositionUtil
import com.jymj.zhglxt.widget.popup.CommonPopupWindow
import com.jymj.zhglxt.widget.zdybj.MeTitleLayout2
import com.setsuna.common.commonutils.ToastUtils
import com.youth.banner.BannerConfig
import com.youth.banner.listener.OnBannerListener
import com.youth.banner.loader.ImageLoader
import kotlinx.android.synthetic.main.activity_xm_tz_detail.*

class XmTzDetailActivity : AppCompatActivity() {
    var popupWindow : CommonPopupWindow ?= null

    @SuppressLint("WrongConstant")
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_xm_tz_detail)

        iv_act_xmtzdetail_more.setOnClickListener {
            popupWindow = object : CommonPopupWindow.Builder(this) {}
                    .setBackGroundLevel(0.8f)
                    .setView(R.layout.pop_xm_tz_detail_more)
                    .setWidthAndHeight(DensityUtil.dp2px(this, 120f),
                            DensityUtil.dp2px(this, 120f))
                    .setAnimationStyle(R.style.pop_anim)
                    .setViewOnclickListener(object :CommonPopupWindow.ViewInterface{
                        override fun getChildView(view: View?, layoutResId: Int) {
                            val tz_detail_bj = view!!.findViewById<LinearLayout>(R.id.pop_xm_tz_detail_bj)
                            val tz_detail_sc = view.findViewById<LinearLayout>(R.id.pop_xm_tz_detail_sc)

                            tz_detail_bj.setOnClickListener {
                                ToastUtils.showShort("编辑")
                                popupWindow!!.dismiss()
                            }
                            tz_detail_sc.setOnClickListener {
                                ToastUtils.showShort("删除")
                                popupWindow!!.dismiss()
                            }
                        }
                    })
                    .setOutsideTouchable(true)
                    .create()
            popupWindow!!.showAsDropDown(iv_act_xmtzdetail_more,30,-50)//后两个参数是显示坐标



        }

        mtl_act_xm_tz_detail_xmyd.setOnTitleListLister(object :MeTitleLayout2.OnTitleListLister{
            override fun onClick(name: String?) {
                if (ll_act_xm_tz_detail_xmyd.isShown){
                    ll_act_xm_tz_detail_xmyd.visibility = View.GONE
                }else{
                    ll_act_xm_tz_detail_xmyd.visibility = View.VISIBLE
                }
            }

        })

        mtl_act_xm_tz_detail_xmjs.setOnTitleListLister(object :MeTitleLayout2.OnTitleListLister{
            override fun onClick(name: String?) {
                if (ll_act_xm_tz_detail_xmjs.isShown){
                    ll_act_xm_tz_detail_xmjs.visibility = View.GONE
                }else{
                    ll_act_xm_tz_detail_xmjs.visibility = View.VISIBLE
                }
            }

        })

        ll_act_xm_tz_detail_xmwz.setOnClickListener {//点击跳转高德地图 或者百度
//            val center1 = getCenter(fjBean.center)//ylEntity
            if (AppInstalledUtils.isAppInstalled(this, "com.autonavi.minimap")){//跳转高德地图
                var intent = Intent()
                intent.action = Intent.ACTION_VIEW
                intent.addCategory(Intent.CATEGORY_DEFAULT)
                //获取本地存储的百度经纬度
                //获取本地存储的百度经纬度

                val model = PositionUtil.gcj_To_Gps84(39.76906, 116.33841)//自己维度经度
//                            val transform = PositionUtil.transform(center1.latitude, center1.longitude)//84转火星
                val transform = PositionUtil.wgs84togcj02(116.33841, 39.76906)//目的地经度纬度
//                            val point = LatLng(model.wgLat, model.wgLon)
                val uri = Uri.parse("amapuri://route/plan/?sid=BGVIS1&slat=" + 39.76906  + "&slon=" + 116.33841 +
                        "&sname=" + "自己位置" + "&did=BGVIS2&dlat=" + transform[0].toString() + "&dlon=" +
                        transform[1].toString() + "&dname=" + "目的地" + "&dev=0&t=0")//数字替换自己纬度经度
                intent.data = uri
                //启动该页面即可
                startActivity(intent)
            }else if (AppInstalledUtils.isAppInstalled(this, "com.baidu.BaiduMap")){//跳转百度地图
                var intent = Intent()
                intent.data = Uri.parse("baidumap://map/direction?region=目的地&destination=" + 39.76906.toString() +
                        "," + 116.33841.toString() + "&mode=driving" +//+ "&destination=" + ""
                        "&coord_type=wgs84")
                startActivity(intent)
            }else{
                ToastUtils.showShort("请安装百度地图或高德地图")

            }

        }
        val imgList = ArrayList<String>()
        imgList.add("https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fpic1.win4000.com%2Fwallpaper%2F2018-06-27%2F5b3345789ca2c.jpg&refer=http%3A%2F%2Fpic1.win4000.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1672910787&t=e3a0ba5b620c4df0501fdb99d1c2dcef")
        imgList.add("https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fpic1.win4000.com%2Fwallpaper%2Ff%2F57a42b9002e19.jpg&refer=http%3A%2F%2Fpic1.win4000.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1672910839&t=819d65b15dfd6986f64fcdaffb9bd286")
        imgList.add("https://img1.baidu.com/it/u=38231409,2215725747&fm=253&fmt=auto&app=138&f=JPEG?w=889&h=500")
        val imgTitleList = ArrayList<String>()
        imgTitleList.add("花")
        imgTitleList.add("鸟")
        imgTitleList.add("森林")
        banner_act_xm_tz_detail.setBannerStyle(BannerConfig.CIRCLE_INDICATOR_TITLE)
                .setDelayTime(3000)
                .setImageLoader(NetViewHolder())
                .setBannerTitles(imgTitleList)
                .setIndicatorGravity(BannerConfig.RIGHT)
                .setImages(imgList).setOnBannerListener(object:OnBannerListener{
                    override fun OnBannerClick(position: Int) {
                        ToastUtils.showShort("点击第"+position+"张")
                    }
                })

        banner_act_xm_tz_detail.start()
    }


     class NetViewHolder : ImageLoader() {
         override fun displayImage(context: Context?, path: Any?, imageView: ImageView?) {
             Glide.with(context!!).load(path).into(imageView!!)
         }
    }
}
